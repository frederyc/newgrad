package com.example.be.entities.job;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.example.be.entities.base.IBaseEntity;
import lombok.*;

import java.util.List;

@Data
@AllArgsConstructor
@NoArgsConstructor
@ToString
@DynamoDBTable(tableName = "jobEntry")
public class JobEntry implements IBaseEntity {
    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    private String id;

    // OWNERSHIP
    @DynamoDBAttribute
    private @NonNull String ownerUsername;
    @DynamoDBAttribute
    private @NonNull String companyName;

    // MAIN DETAILS
    @DynamoDBAttribute
    private @NonNull String title;
    @DynamoDBAttribute
    private @NonNull String location;
    @DynamoDBAttribute
    private @NonNull String description;
    @DynamoDBAttribute
    private @NonNull String link;

    // SECONDARY DETAILS
    @DynamoDBAttribute
    private @NonNull String workArrangement;
    @DynamoDBAttribute
    private @NonNull String workTime;
    @DynamoDBAttribute
    private @NonNull String seniority;
    @DynamoDBAttribute
    private @NonNull String education;

    // REQUIREMENTS
    @DynamoDBAttribute
    private @NonNull List<String> responsibilities;
    @DynamoDBAttribute
    private @NonNull List<String> requiredSkills;
    @DynamoDBAttribute
    private @NonNull List<String> preferredSkills;

    // COMPENSATION
    private @NonNull List<String> benefits;
    @DynamoDBAttribute
    private List<Integer> salary;
    @DynamoDBAttribute
    private String salaryCurrency;

    // TAGS
    @DynamoDBAttribute
    private @NonNull List<String> tags;

    public JobEntry(
            @NonNull String ownerUsername,
            @NonNull String companyName,
            @NonNull String title,
            @NonNull String location,
            @NonNull String description,
            @NonNull String link,
            @NonNull String workArrangement,
            @NonNull String workTime,
            @NonNull String seniority,
            @NonNull String education,
            @NonNull List<String> responsibilities,
            @NonNull List<String> requiredSkills,
            @NonNull List<String> preferredSkills,
            @NonNull List<String> benefits,
            List<Integer> salary,
            @NonNull List<String> tags,
            String salaryCurrency
    ) {
        this.ownerUsername = ownerUsername;
        this.companyName = companyName;
        this.title = title;
        this.location = location;
        this.description = description;
        this.link = link;
        this.workArrangement = workArrangement;
        this.workTime = workTime;
        this.seniority = seniority;
        this.education = education;
        this.responsibilities = responsibilities;
        this.requiredSkills = requiredSkills;
        this.preferredSkills = preferredSkills;
        this.benefits = benefits;
        this.salary = salary;
        this.salaryCurrency = salaryCurrency;
        this.tags = tags;
    }
}
